+ FP树
FP-growth算法将数据存储在一种称为FP树的紧凑数据结构中。FP代表频繁啊模式(frequent Pattern).一颗FP树看上去
与计算机科学中的其他树结构类似，但是它通过链接(link)来链接相似元素，被连起来的元素项可以看成一个链表。

同搜索树不同的是，一个元素项可以在一颗FP树中出现多次。FP树会存储项集的出现频率，而每个项集会以路径的方式存储
在树中。存在相似元素的集合会共享树的一部分。只有当集合之间完全不同，树才会分叉。树节点上给出集合中的单个元素
及其序列中的出现次数，路径会给出该序列的出现次数。

FP-growth算法的工作流程如下。首先构建FP树，然后利用它来挖掘频繁项集。为构建FP树，需要对原始数据集扫描两遍。
第一遍对所有元素项的出现次数进行计数。如果某元素不是频繁的，那么包含该元素的超集也是不频繁的，所以就不需要
考虑这些超集。数据库的第一遍扫描用来统计出现的频率，而第二遍扫描中只考虑那些频繁元素。

从FP树中抽取频繁项集的三个基本步骤：
1，从FP树中获得条件模式基
2，利用条件模式基，构建一个条件FP树；
3，迭代重复步骤1，2，直到树包含一个元素为止。

条件模式基是以查找元素项为结尾的路径集合。每一条路径其实都是一条前缀路径。简而言之，一条前缀路径是介于所查找元素项
与树根节点之间的所有内容。

